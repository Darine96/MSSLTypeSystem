.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
'\"	# Start an argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1	\\fI\\$2\\fP	(\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
'\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally, but don't draw top of
.\"	box if the box started on an earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
'\"	# VS - start vertical sidebar
'\"	# ^Y = starting y location
'\"	# ^v = 1 (for troff;  for nroff this doesn't matter)
..
.TH ft_thread_mutex_lock, 1
.SH NAME
ft_thread_mutex_lock, ft_thread_mutex_unlock \- mutexes for fair threads
.SS SYNOPSIS

.Sp
.nf
\fB#include\fR <fthread.h>

int \fBft_thread_mutex_lock\fR   (pthread_mutex_t *mutex);

int \fBft_thread_mutex_unlock\fR (pthread_mutex_t *mutex);

.Sp
.fi
.SS DESCRIPTION


For unlinked threads, \fBft_thread_mutex_lock\fR is like \fBpthread_mutex_lock\fR and
\fBft_thread_mutex_unlock\fR  is like \fBpthread_mutex_unlock\fR.


.P

 For linked threads, \fBft_thread_mutex_lock\fR
suspends the calling thread until \fBmutex\fR can be locked. Thus,
while \fBmutex\fR is unavailable, other threads in the scheduler can continue to run (this would not be the case
if \fBpthread_mutex_lock\fR where used instead of \fBft_thread_mutex_lock\fR). All locks owned by a
thread are automatically released when it terminates or when it is stopped. 


.SS RETURN VALUES

On success \fBft_thread_mutex_lock\fR and \fBft_thread_mutex_unlock\fR both return the value 0.
On error, a non-zero error code is returned.
.SS ERRORS

Errors returned are the ones returned by \fBpthread_mutex_lock\fR and \fBpthread_mutex_unlock\fR. 
.SS SEE ALSO

\fBft_thread_link\fR (3), 
\fBft_thread_unlink\fR (3).

.SH AUTHOR


