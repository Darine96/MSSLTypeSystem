fn th1(mut y:box<trc<int>>)->unit{

    let mut x = *y;
    //print (x)
    cooperate;
    //print (x)
    cooperate;
    //print (x)
    cooperate;
    //print (x)
    cooperate;
    //print (x)
    cooperate;
    //print (x)
    //free(x) and free(y)
    }

fn th2(mut x:box<trc<int>>)->unit{
    **x = 1;
    cooperate;
    **x = 2;
    cooperate;
    **x = 3;
    cooperate;
    **x = 4;
    cooperate;
    **x = 5;
    cooperate;
    //free(x)
    }

//main
{
let mut x = trc(0);
let mut y = box(x.clone);
spawn(th1(y));
spawn(th2(box(x.clone)));

//free(x)
}